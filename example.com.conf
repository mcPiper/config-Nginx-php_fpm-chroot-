# /etc/nginx/sites-available/example.com.conf
# if you find this config useful, please consider donating bitcoin:1MjxPWAyebHhjQdjLPGcV5oZd5VbEWrAga

# а это уже непосредственно сам файл виртуального хоста
# разрешаем 30 запросов за 60 секунд с одного ip
# этот параметр работает как ограничение скорости км/ч на знаке,
# *нельзя* сделать 30 запросов за несколько секунд и ждать следующей минуты
# такая запись эквивалентна разрешённой скорости в 0.5 запроса в секунду

limit_req_zone  $binary_remote_addr zone=login_user:1m rate=30r/m;

# ограничиваем количество запросов к поиску сайта с одного ip

map $arg_s $is_search {
    default       "";
    "~.*"         $binary_remote_addr;
}

limit_req_zone $is_search zone=search_user:1m rate=10r/m;

upstream fcgi_user {
    server 127.0.0.1:9001;
}

server {
    listen          80;
    
    # listen         443 ssl;
    # ssl_session_cache shared:SSL:10m;
    # ssl_session_timeout 10m;
    # ssl_certificate         /etc/nginx/ssl/example.com.crt;
    # ssl_certificate_key     /etc/nginx/ssl/example.com.key;
    # add_header Strict-Transport-Security "max-age=31536000";
    
    server_name     example.com;
    charset         utf-8;
    #error_log /var/log/nginx/e.example.log crit;
    error_log /var/log/nginx/e.example.log error;
    access_log /var/log/nginx/a.example.log wtimes buffer=16k flush=10s;

    root /www/user/example.com/www;
    index index.php index.html index.htm;
    
    limit_req zone=search_user burst=1 nodelay;

    include fastcgi_params;

    fastcgi_index index.php;
    fastcgi_intercept_errors off; # передавать ли клиенту ответы FastCGI-сервера с кодом больше либо равным 400, или же перенаправлять их на обработку nginx’у с помощью директивы error_page.
    #fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param SCRIPT_FILENAME /www$fastcgi_script_name;
    fastcgi_param DOCUMENT_ROOT /www;

    location / {
        limit_except GET HEAD POST {
            deny all;
        }
        try_files $uri $uri/ /index.php?$args;
    }

    # к этим скриптам ВСЕГДА должен быть доступ

    location = /index.php {
        limit_except GET HEAD POST {
            deny all;
        }
        include snippet.d/sec_headers;
        fastcgi_pass fcgi_user;
    }

    location = /wp-login.php {
        limit_except GET HEAD POST {
            deny all;
        }
        limit_req zone=login_user burst=1 nodelay;
        include snippet.d/sec_headers;
        fastcgi_pass fcgi_user;
    }

    location = /wp-includes/js/tinymce/wp-tinymce.php {
        limit_except GET HEAD {
            deny all;
        }
        include snippet.d/sec_headers;
        fastcgi_pass fcgi_user;
    }

    location ~* ^/wp-admin/[^/]*\.php$ {
        limit_except GET HEAD POST {
            deny all;
        }
        include snippet.d/sec_headers;
        client_max_body_size 16m;
        try_files $fastcgi_script_name =404;
        fastcgi_pass fcgi_user;
    }

    # к этим скриптам МОЖНО запретить доступ (нужно просто удалить блок)

    location = /wp-cron.php {
        limit_except GET HEAD POST {
            deny all;
        }
        include snippet.d/sec_headers;
        fastcgi_pass fcgi_user;
    }

    location = /wp-activate.php {
        limit_except GET HEAD {
            deny all;
        }
        include snippet.d/sec_headers;
        fastcgi_pass fcgi_user;
    }

    location ~* ^/wp-content/plugins/.*\.php$ {
        limit_except GET HEAD POST {
            deny all;
        }
        include snippet.d/sec_headers;
        try_files $fastcgi_script_name =404;
        fastcgi_pass fcgi_user;
    }
    
    # иногда может понадобится разрешить интерпретацию этих файлов:
    #
    # /xmlrpc.php - если вы не работаете с сайтом через клиент на мобильном устройстве
    # /wp-trackback.php - трэкбэки и пингбэки
    # /wp-mail.php - если вы не шлёте сайту статьи на почту, откуда он их забирает
    # /wp-signup.php - регистрация новых пользователей
    # /wp-comments-post.php - комментарии (подключайте disqus.com)
    # /wp-cron.php - если вы настроите настоящий крон через 
    #       define('DISABLE_WP_CRON', true);
    #       php -q wp-cron.php
    # /wp-content/themes/*.\.php
    # /wp-admin/maint/repair.php - ???
    # /wp-admin/(?:includes|network|user)/.*\.php - ???
    # /wp-blog-header.php - ???
    # /wp-links-opml.php - ???
    # /wp-load.php - ???
    # /wp-settings.php - ???

    # запрещаем доступ к WP REST API v2. некоторые плагины могут перестать работать
    location ~* ^/wp-json/? {
        return 403;
    }

    # запрещаем доступ ко всем остальным скриптам
    location ~* \.php$ {
        return 403;
    }

    # запрещаем доступ ко всему что начинается с точки (.htaccess, .git/)
    location ~* /\. {
        return 403;
    }

    # запрещаем доступ к бэкапам и дампам, которые иногда бывают в папке вебсервера
    location ~* \.(sql|sql\.gz)$ {
        return 403;
    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|rar|tgz|gz|rar|bz2|doc|docx|xls|xlsx|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
        limit_except GET HEAD {
            deny all;
        }
        #access_log off;
        log_not_found off;
        expires max;
    }

    location ~* ^.+\.(css|js)$ {
        limit_except GET HEAD {
            deny all;
        }
        #access_log off;
        expires 1d;
    }
    # если этот конфиг оказался для вас полезен - поддержите автора монеткой bitcoin:1MjxPWAyebHhjQdjLPGcV5oZd5VbEWrAga
}
